server {

    listen 9090;

    log_by_lua_block {
        local request_counter = require "resty.greencheek.request.counter"

        local key = ngx.var.request_key
        if key ~= "stats" then
            if key == "" then
                request_counter.record_generic_request("request_counters",ngx.var.request_time)
            else
                request_counter.record_request("request_counters",key,ngx.var.request_time)
            end
        end

 --       for i=1,30 do
 --           local k = "xyx"..i
 --           ngx.log(ngx.CRIT,"logging " .. k)
 --           request_counter.record_request("request_counters",k,10)
 --       end
    }

    location /log {

        content_by_lua_block {
            ngx.sleep(0.001)
            ngx.say('Hello,world!')
        }
    }

    location /key {

        set $request_key "key";
        content_by_lua_block {
            ngx.sleep(0.2)
            ngx.say('Hello,world!')
        }
    }

    location /topic {
        set $request_key "topic";
        content_by_lua_block {
            ngx.sleep(0.2)
            ngx.say('Hello,world!')
        }
    }

    location /all_only_stats {
        set $request_key "stats";

        content_by_lua_block {
            local request_counter = require "resty.greencheek.request.counter"

            ngx.say(request_counter.single_stats("request_counters","all"))
        }
    }

    location /report_all_stats {
        set $request_key "stats";

        content_by_lua_block {
            local request_counter = require "resty.greencheek.request.counter"

            ngx.say(request_counter.single_stats("request_counters","all_stats"))
        }
    }

    location /stats {
        set $request_key "all_stats";

        content_by_lua_block {
            local request_counter = require "resty.greencheek.request.counter"

            ngx.say(request_counter.stats("request_counters"))
        }
    }

}
